<div class="col-md-4">
<div class="authform">
  <%= form_for(resource, :as => resource_name, :url => registration_path(resource_name), :html => { :role => 'form'}) do |f| %>
    <h3><%= t('sign_up') %></h3>
    <%= devise_error_messages! %>

    <%= f.simple_fields_for :events do |f| %>
      <%= f.label :address %>
      <div class="input-group">
        <%= f.text_field :address, class: 'form-control', :autofocus => true, placeholder: t('geolocate') %>
        <span class="input-group-btn">
          <a href="#" class="btn btn-default geolocate" onclick="getLocation()" type="submit">
              <i class="fa fa-map-marker"></i>
          </a>
        </span>
      </div>

      <%= f.input :photo, :as => :file, :input_html => {:onchange => "loadFile(event)"} %>
      <img id="output"/>

      <%= f.hidden_field :passenger_id, value: @passenger %>
      <%= hidden_field_tag :t, params[:t] %>
    <% end %>

    <div class="form-group">
      <%= f.label :name %>
      <%= f.text_field :name, class: 'form-control' %>
    </div>
    <div class="form-group">
      <%= f.label :email %>
      <%= f.email_field :email, class: 'form-control' %>
    </div>
    <div class="form-group">
      <%= f.label :password %>
      <%= f.password_field :password, class: 'form-control' %>
    </div>
    <div class="form-group">
      <%= f.label :password_confirmation %>
      <%= f.password_field :password_confirmation, class: 'form-control' %>
    </div>
      <%= f.hidden_field :locale, value: I18n.locale %>
      <%= invisible_captcha sentence_for_humans: "who is it?" %>

     <%= f.submit 'Sign up', :class => 'button right btn btn-primary' %>

     <p>Vous avez deja particip√© avec un autre Passager ? <%= link_to "Cliquez ici.", new_event_path(shortcut: params[:t]) %>
  <% end %>
</div>
</div>
<div class="col-md-8" style="margin-top:30px;">
<div id="map" style="height: 600px;"></div>
</div>

<script>
(function() {
  var $, cupcakeTiles;
  $ = jQuery;
  cupcakeTiles = L.tileLayer('https://cartodb-basemaps-{s}.global.ssl.fastly.net/light_nolabels/{z}/{x}/{y}.png', {
    minZoom: 2,
    maxZoom: 18,
  });

  var Passenger = document.getElementById("user_events_attributes_0_passenger_id").value;
  //$.getJSON('<%= root_url %>/passengers/<%= params[:passenger] %>.json', function(data) {
  $.getJSON("<%= root_url %>/passengers/" + Passenger + ".json", function(data) {

    var geojson, map;
    var pointlist = [];
    var counter = 0;

geojson = L.geoJson(data, {
    onEachFeature: function(feature, layer) {
          counter++;

          var x = feature.geometry.coordinates[1];
          var y = feature.geometry.coordinates[0];
          pointlist.push([x, y]);

        layer.bindPopup(feature.properties.popupContent);
        layer.on('mouseover', function (e) {
              this.openPopup();
          });
          layer.on('mouseout', function (e) {
              this.closePopup();
          });

        if (layer.feature.properties.markerurl == null){
        layer.setIcon(new L.DivIcon({
        iconSize: new L.Point(82, 32),
        className: "divicon",
        html:'<p class="text-center small text-muted"><i class="fa fa-circle fa-3x" aria-hidden="true"></i><code>Etape '+counter+'</code></p>'
        }));


       } else {
          layer.setIcon(new L.DivIcon({
          iconSize: new L.Point(82, 32),
          className: "divicon",
          html:'<img src="'+layer.feature.properties.markerurl+'" class="img-marker"><p class="text-center"><code>Etape '+counter+'</code></p>'
          }));
            }
  }

});

function isEmpty(obj) {
    for(var key in obj) {
        if(obj.hasOwnProperty(key))
            return false;
    }
    return true;
}

if(isEmpty(geojson._layers)) {
  //console.log('layers sont vides');
  map = L.map('map').setView([30, 0], 2);
} else {
  //console.log('markers existent');
  map = L.map('map').fitBounds(geojson.getBounds());
}

    map.zoomControl.setPosition('bottomright');
    cupcakeTiles.addTo(map);
    var markers = L.markerClusterGroup();
    var pathLine = L.polyline(pointlist, { dashArray: '1,5', color: '#000', weight: 1.3, opacity: 1, lineCap: 'square'}).addTo(map)
    markers.addLayer(geojson);
    markers.addTo(map);
    // var firefoxIcon = L.icon({
    //        iconUrl: 'http://joshuafrazier.info/images/firefox.svg',
    //        iconSize: [38, 95], // size of the icon
    //        });

    var firefoxIcon = L.divIcon({
      html: '<i class="fa fa-map-marker text-danger fa-3x"></i>',
    iconSize: [20, 20],
    iconAnchor: [10, 40],
    className: 'myDivIcon'
       });
       // create marker object, pass custom icon as option, add to map
       // var marker = L.marker([43.64701, -79.39425], {icon: firefoxIcon}).addTo(map);
       var theMarker = {};
       map.on('click',function(e){
           lati = e.latlng.lat;
           longi = e.latlng.lng;
           var geocoder = new google.maps.Geocoder;
           function geocodeLatLng(geocoder, lati, longi) {
                 var latlng = {lat: lati, lng: longi};
                 geocoder.geocode({'location': latlng}, function(results, status) {
                   if (status === 'OK') {
                     if (results[0]) {
                      // window.alert(results[0].formatted_address);
                       document.getElementById('user_events_attributes_0_address').value=results[0].formatted_address;

                     } else {
                       window.alert('No results found');
                     }
                   } else {
                     window.alert('No results found');
                    // window.alert('Geocoder failed due to: ' + status);
                   }
                 });
               }
               geocodeLatLng(geocoder, lati, longi);
           console.log("You clicked the map at LAT: "+ lati+" and LONG: "+longi );
               //Clear existing marker,

               if (theMarker != undefined) {
                     map.removeLayer(theMarker);
               };

           //Add a marker to show where you clicked.
            theMarker = L.marker([lati,longi], {icon: firefoxIcon}).addTo(map);

       });

       window.PlaceFirefox = function(lati, longi){
        //function PlaceFirefox(lati, longi){
           console.log("You clicked the map at LAT: "+ lati+" and LONG: "+longi );

               //Clear existing marker,

               if (theMarker != undefined) {
                     map.removeLayer(theMarker);
               };

           //Add a marker to show where you clicked.
            theMarker = L.marker([lati,longi], {icon: firefoxIcon}).addTo(map);
            //map.flyTo(new L.LatLng(lati, longi));
            map.flyTo([lati, longi], map.getZoom())
       };

  });

}).call(this);

$(function(){
		$('.geolocate').on("click", function () {
		$('.fa-map-marker').addClass("animate-flicker");
		setTimeout(RemoveClass, 3500);
		});
		function RemoveClass() {
		$('.fa-map-marker').removeClass("animate-flicker");
		}
		});

var x = document.getElementById("geolocate");
var geocoder = new google.maps.Geocoder();

function getAddress(location, callback){
    geocoder.geocode({'latLng': location}, function(results, status){
        if(status === google.maps.GeocoderStatus.OK){
            if(results[0]){
                var address1 = results[0].formatted_address;
                console.log(results[0]);

                callback(address1);
            }
        }
    });
}

function getLocation() {
if (navigator.geolocation) {
  navigator.geolocation.getCurrentPosition(showPosition);

} else {
  x.innerHTML = "Geolocation is not supported by this browser.";
}
}

function showPosition(position) {

var location = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);
getAddress(location, function(address)
{
  console.log(address);
  console.log(position.coords.latitude);
  console.log(position.coords.longitude);
    document.getElementById('user_events_attributes_0_address').value=address;
 var personne = {};
 	function placeMarker(){
		var lat = position.coords.latitude;
		var lng = position.coords.longitude;
		//alert("You clicked the map at LAT: " + lat + " and LONG: " + lng);
		//L.marker(e.latlng).addTo(map);
      var person = L.marker([lat,lng])
	};
PlaceFirefox(position.coords.latitude, position.coords.longitude)
placeMarker(position.coords.latitude)
});
}

var loadFile = function(event) {
  var output = document.getElementById('output');
  output.src = URL.createObjectURL(event.target.files[0]);

  output.onload = function (e) {
           $('#output')
              .attr('src', e.target.result)
              .width(50)
              .height(50);
          };
};

</script>
