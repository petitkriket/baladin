<% meta robots: "noindex,nofollow" %>

<div class="col-md-4">
  <div class="authform">
    <%= form_for(resource, :as => resource_name, :url => registration_path(resource_name), :html => { :role => 'form'}) do |f| %>
      <h3><%= t('sign_up_participation') %></h3>
      <%= devise_error_messages! %>

      <%= f.simple_fields_for :events do |f| %>
        <div class="input-group">
          <%= f.text_field :address, class: 'form-control', :autofocus => false,  onclick: "getLocation()", placeholder: true, required: true %>
          <span class="input-group-btn">
            <a href="#" class="btn btn-default geolocate" onclick="getLocation()" type="submit">
                <i class="fa fa-map-marker"></i>
            </a>
          </span>
        </div>
        <div id="error-address"></div>

        <div class="form-group">
                <label></label>
                <div class="input-group">
                  <input type="text" class="form-control" id="input-url-image" readonly placeholder="<%= t('no_file_chosen') %>">
                    <span class="input-group-btn">
                        <span class="btn btn-default btn-file">
                            <i class="fa fa-camera"></i>
                            <%= f.input :photo, :as => :file, label: false %>
                        </span>
                    </span>
                </div>
                <div id="error-photo" class="text-danger"></div>
                <small class="form-text text-muted hint-photo"><%= t('photo_hint') %></small>
                <img id='img-upload'/>
            </div>
        <%= f.hidden_field :passenger_id, value: @passenger.id %>
        <%= hidden_field_tag :t, params[:t] %>
      <% end %>

      <div class="form-group">
        <%= f.text_field :name, class: 'form-control', required: true, :minlength=>"3", placeholder: true  %>
      </div>
      <div class="form-group">
        <%= f.email_field :email, class: 'form-control', required: true, placeholder: true %>
        <small class="form-text text-muted"><%= t('email_hint') %></small>
      </div>
      <div class="form-group">
        <%= f.password_field :password, class: 'form-control', required: true, placeholder: true %>
      </div>
      <div class="form-group">
        <%= f.password_field :password_confirmation, class: 'form-control', required: true, placeholder: true %>
      </div>

      <%= f.hidden_field :locale, value: I18n.locale %>
      <%= invisible_captcha sentence_for_humans: "who is it?" %>
      <%= f.submit t('sign_up'),:id => 'submit-user', :class => 'button right btn btn-primary' %>
      <p><%= t('already_in') %> <%= link_to t('click_here'), new_event_path(shortcut: params[:t]) %>.</p>

    <% end %>
  </div>
</div>

<div class="col-md-8" style="margin-top:30px;">
  <div id="map" ref="mapElement" style="height: 600px;">
      <a href="http://mapbox.com/about/maps" class='mapbox-wordmark' target="_blank">Mapbox</a>
  </div>
</div>

<div id="langModal" class="modal fade modal2" role="dialog">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h4 class="modal-title"><%= t('welcome') %>,</h4>
      </div>
      <div class="modal-body">
        <p><%= t('welcome_msg') %></div>
      <div class="modal-footer">
        <p class="pull-left">
          <% if I18n.locale == :fr %>
          <%= link_to t('version'), url_for({:locale => 'en', t: params[:t]}) %>
          <% end %>
          <% if I18n.locale == :en %>
          <%= link_to t('version'), url_for({:locale => 'fr', t: params[:t]}) %>
          <% end %>
        </p>

        <button type="button" class="btn btn-primary" data-dismiss="modal"><%= t('begin') %></button>
      </div>
    </div>

  </div>
</div>

<script type="text/javascript">
  // locale selection modal opens on load
  $(window).on('load',function(){
    $('#langModal').modal('show');
  });
</script>

<script>
// user registration form validation
jQuery.validator.setDefaults({
  success: "valid",
  errorElement: "span",
  errorClass: "help-block",
  highlight: function (element, errorClass, validClass) {
  if (!$(element).hasClass('novalidation')) {
      $(element).closest('.form-group').removeClass('has-success').addClass('has-error');
  }
  },
  unhighlight: function (element, errorClass, validClass) {
  if (!$(element).hasClass('novalidation')) {
      $(element).closest('.form-group').removeClass('has-error').addClass('has-success');
  }
  },
  errorPlacement: function (error, element) {
  if (element.parent('.input-group').length) {
      error.insertAfter(element.parent());
  }
  else if (element.prop('type') === 'radio' && element.parent('.radio-inline').length) {
      error.insertAfter(element.parent().parent());
  }
  else if (element.prop('type') === 'checkbox' || element.prop('type') === 'radio') {
      error.appendTo(element.parent().parent());
  }
  else { error.insertAfter(element); }
  }
  });
$.validator.addMethod('filesize', function (value, element, param) {
    return this.optional(element) || (element.files[0].size <= param)
  }, '<%#= t('file_size') %>');
$( "#new_user" ).validate({
  lang: '<%= I18n.locale %>',
  rules: {
        "user_events_attributes_0_address": "required",
        "user_name": "required",
        "user_email": {
          required: true,
          email: true
         },
         "user[events_attributes][0][photo]": {
                  required: false,
                  extension: "jpg|jpeg|png",
                  filesize:11000000
              },
        "user[password]": {
          minlength: 6
                 },
         "user[password_confirmation]": {
           minlength: 6,
           equalTo : "#user_password"
         }
  },
errorPlacement: function(error, element) {
     if (element.attr("name") == "user[events_attributes][0][photo]") {
         $("#error-photo").html( error );
     } else if (element.attr("name") == "user[events_attributes][0][address]") {
         $("#error-address").html( error );
     } else {
         error.insertAfter(element);
     }
   }
});
</script>

<script>
// image upload preview
$(document).on('change', '.btn-file :file', function() {
		var input = $(this),
			label = input.val().replace(/\\/g, '/').replace(/.*\//, '');
		input.trigger('fileselect', [label]);
		});

		$('.btn-file :file').on('fileselect', function(event, label) {

		    var input = $(this).parents('.input-group').find(':text'),
		        log = label;

		    if( input.length ) {
		        input.val(log);
		    } else {
		        if( log ) alert(log);
		    }

		});
		function readURL(input) {
		    if (input.files && input.files[0]) {
		        var reader = new FileReader();

		        reader.onload = function (e) {
		            $('#img-upload').attr('src', e.target.result);
                $('#img-upload').css('padding','15px');
                $('.hint-photo').addClass('hidden');

		        }

		        reader.readAsDataURL(input.files[0]);
		    }
		}

		$("#user_events_attributes_0_photo").change(function(){
		    readURL(this);
		});

    $('#input-url-image').on('click', function() {
        $('#user_events_attributes_0_photo').click();
    });
</script>
